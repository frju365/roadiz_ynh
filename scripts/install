#!/bin/bash

#=================================================
# GENERIC STARTING
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source .fonctions
source /usr/share/yunohost/helpers

#=================================================
# MANAGE FAILURE OF THE SCRIPT
#=================================================

ynh_check_error	# Active trap pour arrêter le script si une erreur est détectée.

#=================================================
# RETRIEVE ARGUMENTS FROM THE MANIFEST
#=================================================

domain=$YNH_APP_ARG_DOMAIN
path_url=$YNH_APP_ARG_PATH
is_public=$YNH_APP_ARG_IS_PUBLIC
admin_name=$YNH_APP_ARG_ADMIN_NAME
admin_pass=$YNH_APP_ARG_ADMIN_PASS
admin_email=$YNH_APP_ARG_ADMIN_EMAIL

app=$YNH_APP_INSTANCE_NAME

#=================================================
# CHECK IF THE APP CAN BE INSTALLED WITH THIS ARGS
#=================================================

CHECK_USER "$admin_name"	# Vérifie la validité de l'user admin
path_url=$(ynh_normalize_url_path $path_url)	# Vérifie et corrige la syntaxe du path.
CHECK_DOMAINPATH	# Vérifie la disponibilité du path et du domaine.
CHECK_FINALPATH	# Vérifie que le dossier de destination n'est pas déjà utilisé.

#=================================================
# STORE SETTINGS FROM MANIFEST
#=================================================

user="$app"
ynh_app_setting_set "$app" is_public "$is_public"
ynh_app_setting_set "$app" admin_pass "$admin_pass"
ynh_app_setting_set "$app" admin_name "$admin_name"
ynh_app_setting_set "$app" admin_email "$admin_email"

#=================================================
# Check password strength
#=================================================

[[ ${#admin_pass} -gt 5 ]] || ynh_die \
"The password is too weak, it must be longer than 5 characters"

#=================================================
# STANDARD MODIFICATIONS
#=================================================
# CREATE A SQL BDD
#=================================================

db_name=$app
db_user=$app
db_pass=$(ynh_string_random)
ynh_mysql_create_db "$db_name" "$db_user" "$db_pass"
ynh_app_setting_set "$app" db_name "$db_name"
ynh_app_setting_set "$app" db_pass "$db_pass"
ynh_app_setting_set "$app" db_user "$db_user"
ynh_app_setting_set "$app" mysqlpwd "$db_pass"

#=================================================
# CHECK
#=================================================

www_path=/var/www
ynh_app_setting_set $app www_path $www_path
final_path=$www_path/$app
ynh_app_setting_set $app final_path $final_path

#=================================================
# PHP-FPM CONFIGURATION
#=================================================

POOL_FPM

#=================================================
# Set up tmp folder for installation
#=================================================

tmp=/tmp/roadizi
sudo rm -rf $tmp
sudo mkdir -p $tmp
sudo chown -R www-data:www-data $tmp
sudo chmod -R 755 $tmp


#=================================================
# Prepare composer and cache directories
#=================================================

compo=/opt/${app}_composer
sudo mkdir -p $compo/cache
sudo chown -R www-data:www-data $compo
sudo chmod -R 755 $compo

#=================================================
# SPECIFIC SETUP
#=================================================
# Installation : Get Composer:
#=================================================

 EXPECTED_SIGNATURE=$(wget https://composer.github.io/installer.sig -O - -q)
 sudo php -r "copy('https://getcomposer.org/installer', '$compo/composer-setup.php');"
 ACTUAL_SIGNATURE=$(php -r "echo hash_file('SHA384', '$compo/composer-setup.php');")
 if [ "$EXPECTED_SIGNATURE" = "$ACTUAL_SIGNATURE" ]
  then
#      sudo grep -q -F 'env[COMPOSER_HOME]= $compo' /etc/php5/fpm/pool.d/${app}.conf || sudo echo 'env[COMPOSER_HOME]= /opt/flarum_c$
#      sudo service php5-fpm reload
#       echo "php reload"
      sudo php $compo/composer-setup.php --install-dir=$compo --filename=composer
#      sudo mv /opt/flarum_composer/composer /usr/local/bin
#      sudo chown root:root /usr/local/bin/composer
      RESULT=$?
  else
      >&2 echo 'ERROR: Invalid installer signature'
      RESULT=1
 fi
 if [ $RESULT != 0 ]
  then
    ynh_die
 fi

#=================================================
# Installation : Install of Roadiz with composer
#=================================================

cwd=$(pwd)
sudo su - www-data -s /bin/bash -c "mkdir -p $tmp/$app && cd $tmp/$app && php -d memory_limit=-1 /opt/${app}_composer/composer create-project roadiz/standard-edition ."
sudo cp -Rf $tmp/$app $www_path/
sudo chown -R www-data:www-data $final_path
cd $cwd
sudo rm -rf $tmp

#=================================================
# Modify the config.yml
#=================================================

sudo rm $final_path/conf/config.default.yml
sed -i "s@db_user@$db_user@g"         ../conf/config.yml
sed -i "s@db_pass@$db_pass@g"         ../conf/config.yml
sed -i "s@db_name@$db_name@g"         ../conf/config.yml
sudo mv ../conf/config.yml $final_path/conf/config.yml

#=================================================
# Installation : Configuration of Database + Roadiz conf
#=================================================

pushd $final_path
# Create database schema
sudo ./bin/roadiz orm:schema-tool:create -n
# Install base fixtures
sudo ./bin/roadiz install -n
sudo ./bin/roadiz themes:generate FooBar
# Install DefaultTheme
sudo ./bin/roadiz themes:install -n "/Themes/DefaultTheme/DefaultThemeApp"
# Install DefaultTheme node-type, settings and tags
sudo ./bin/roadiz themes:install -n --data "/Themes/DefaultTheme/DefaultThemeApp"
# Generate node-type Doctrine entities
sudo ./bin/roadiz generate:nsentities
# Update database with new node-types
sudo ./bin/roadiz orm:schema-tool:update -n --force
# Add DefaultTheme node fixtures
sudo ./bin/roadiz themes:install -n --nodes "/Themes/DefaultTheme/DefaultThemeApp"
# Clear caches
sudo ./bin/roadiz cache:clear -e dev
sudo ./bin/roadiz cache:clear -e prod
sudo ./bin/roadiz cache:clear -e prod --preview
sudo ./bin/roadiz users:create -n --email=$admin_email --password=$admin_pass --super-admin $admin_name;
popd

#=================================================
# Set permissions
#=================================================

sudo chown www-data:www-data $final_path -R
sudo chmod 775 $final_path -R
sudo rm $final_path/install.php

#=================================================
# NGINX CONFIGURATION
#=================================================
nginxrootconf="../conf/nginx-root.conf"
nginxconf="../conf/nginx.conf"
if [ $path_url = "/" ]; then
    sed -i "s@ROOT_PATH@/var/www/$app@g" $nginxrootconf
    sed -i "s@APP_URL@$domain$path_url@g" $nginxrootconf
    sudo chown root: $nginxrootconf
    sudo chmod 644 $nginxrootconf
    sudo cp $nginxrootconf /etc/nginx/conf.d/$domain.d/$app.conf
else
    sed -i "s@YNH_WWW_PATH@$path_url@g" $nginxconf
    sed -i "s@YNH_WWW_ALIAS@$final_path@g" $nginxconf
    sudo chown root: $nginxconf
    sudo chmod 644 $nginxconf
    sudo cp $nginxconf /etc/nginx/conf.d/$domain.d/$app.conf
fi

#=================================================
# SETUP SSOWAT
#=================================================

# Make app private if necessary
ynh_app_setting_set "$app" is_public "$is_public"
if [ "$is_public" = "Yes" ];
then
  ynh_app_setting_set "$app" unprotected_uris "/"
fi

#=================================================
# RELOAD NGINX
#=================================================

sudo service nginx reload
